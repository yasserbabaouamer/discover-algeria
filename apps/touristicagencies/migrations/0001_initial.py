# Generated by Django 5.0.2 on 2024-04-04 17:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('destinations', '0002_city_description_country_country_code_and_more'),
        ('guests', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PeriodicTour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=500)),
                ('cover_img', models.ImageField(null=True, upload_to='')),
                ('start_day', models.CharField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], max_length=255)),
                ('start_time', models.TimeField()),
                ('end_day', models.CharField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], max_length=255)),
                ('end_time', models.TimeField()),
                ('price', models.PositiveIntegerField()),
                ('tour_status', models.CharField(choices=[('Visible', 'Visible'), ('Hidden', 'Hidden'), ('Deleted', 'Deleted')], max_length=25)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='periodic_tours', to='destinations.city')),
            ],
            options={
                'db_table': 'periodic_tours',
            },
        ),
        migrations.CreateModel(
            name='PeriodicTourRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.PositiveIntegerField(validators=[django.core.validators.RegexValidator(regex='^\\d{7,15}$')])),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Refused', 'Refused'), ('Cancelled_By_Owner', 'Cancelled By Owner'), ('Cancelled_By_Guest', 'Cancelled By Guest'), ('Completed', 'Completed'), ('Deleted_By_Admin', 'Deleted By Admin')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='destinations.country')),
                ('guest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tour_registrations', to='guests.guest')),
            ],
            options={
                'db_table': 'periodic_tour_registrations',
            },
        ),
        migrations.CreateModel(
            name='PeriodicTourReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('rating', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('registration', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='review', to='touristicagencies.periodictourregistration')),
            ],
            options={
                'db_table': 'periodic_tour_reviews',
            },
        ),
        migrations.CreateModel(
            name='ScheduledTour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tour_date', models.DateField(unique=True)),
                ('tour_status', models.CharField(choices=[('Active', 'Active'), ('Cancelled', 'Cancelled')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('periodic_tour', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scheduled_tours', to='touristicagencies.periodictour')),
            ],
            options={
                'db_table': 'scheduled_tours',
            },
        ),
        migrations.AddField(
            model_name='periodictourregistration',
            name='scheduled_tour',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scheduled_tours', to='touristicagencies.scheduledtour'),
        ),
        migrations.CreateModel(
            name='TourImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('tour', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='touristicagencies.periodictour')),
            ],
            options={
                'db_table': 'periodic_tour_images',
            },
        ),
        migrations.CreateModel(
            name='TouristicAgency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=300)),
                ('website_url', models.URLField(null=True)),
                ('cover_img', models.ImageField(null=True, upload_to='')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='touristic_agencies', to='destinations.country')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agency', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'touristic_agencies',
            },
        ),
        migrations.AddField(
            model_name='periodictour',
            name='touristic_agency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tours', to='touristicagencies.touristicagency'),
        ),
        migrations.CreateModel(
            name='Guide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('email', models.EmailField(max_length=255)),
                ('contact', models.CharField(max_length=50)),
                ('touristic_agency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='guides', to='touristicagencies.touristicagency')),
            ],
            options={
                'db_table': 'guides',
            },
        ),
        migrations.AddConstraint(
            model_name='scheduledtour',
            constraint=models.CheckConstraint(check=models.Q(('tour_status__in', ['Active', 'Cancelled'])), name='chk_scheduled_tour_status'),
        ),
        migrations.AddConstraint(
            model_name='periodictourregistration',
            constraint=models.CheckConstraint(check=models.Q(('status__in', ['Pending', 'Accepted', 'Refused', 'Cancelled_By_Owner', 'Cancelled_By_Guest', 'Completed', 'Deleted_By_Admin'])), name='chk_tour_reg_status'),
        ),
        migrations.AddConstraint(
            model_name='periodictour',
            constraint=models.CheckConstraint(check=models.Q(('tour_status__in', ['Visible', 'Hidden', 'Deleted'])), name='chk_periodic_tour_status'),
        ),
    ]
